// leaders in array
// numbers right to a number are less 


#include <bits/stdc++.h>
using namespace std;

vector<int> printLeadersBruteForce(const vector<int>& arr) {
    /*
    // brute force
    // TC : O(n^2)
    // SC : O(n)
    vector<int> ans;
    int n = arr.size();
    for (int i = 0; i < n; i++) {
        bool leader = true;
        for (int j = i + 1; j < n; j++) {
            if (arr[j] > arr[i]) {
                leader = false;
                break;
            }
        }
        if (leader)
            ans.push_back(arr[i]);
    }
    return ans;
    */
    
    //optimal
    // TC : O(n)   ; if ask for sorting O(nlogn)
    // SC : O(n)
    int maxi=INT_MIN;
    vector<int> ans;
    for(int i=arr.size()-1;i>=0;i++){
        if (arr[i]>maxi){
            maxi=arr[i];
            ans.push_back(arr[i]);
        }
    }
    reverse(ans.begin(), ans.end());
    // or sort;according to what question require
    return ans;
}

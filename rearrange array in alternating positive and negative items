class Solution {
public:
    vector<int> rearrangeArray(vector<int>& nums) {
        /*
        // brute force
        // TC : O(n)
        // SC : O(n)
        vector<int> neg;
        vector<int> pos;
        for(int i:nums){
            if (i<0) neg.push_back(i);
            else pos.push_back(i);
        }
        for(int i=0;i<nums.size()/2;i++){
            nums[2*i]=pos[i];
            nums[2*i+1]=neg[i];
        }
        return nums;
        */

        // better
        // TC : O(n)
        // SC : O(n)
        int n=nums.size();
        vector<int> ans(n);
        int posi=0, negi=1;
        for(int i:nums){
            if (i<0){
                ans[negi]=i;
                negi+=2;
            }
            else{
                ans[posi]=i;
                posi+=2;
            }
        }
        return ans;



        // if number of negative and positive numbers is not same
        // TC : O(2*N)
        // SC : O(N/2 + N/2) = O(N) 
        // vector<int> A=nums;
        // vector<int> pos;
        // vector<int> neg;
        // int n=A.size();
        // for(int i=0;i<n;i++){
        //     if(A[i]>0) pos.push_back(A[i]);
        //     else neg.push_back(A[i]);
        // }
        // if(pos.size() < neg.size()){
        //     for(int i=0;i<pos.size();i++){            
        //         A[2*i] = pos[i];
        //         A[2*i+1] = neg[i];
        //     }
        //     int index = pos.size()*2;
        //     for(int i = pos.size();i<neg.size();i++){                
        //         A[index] = neg[i];
        //         index++;
        //     }
        // }
        // else{
        //     for(int i=0;i<neg.size();i++){
        //         A[2*i] = pos[i];
        //         A[2*i+1] = neg[i];
        //     }
        //     int index = neg.size()*2;
        //     for(int i = neg.size();i<pos.size();i++){                
        //         A[index] = pos[i];
        //         index++;
        //     }
        // }
        // return A;
    }
};
